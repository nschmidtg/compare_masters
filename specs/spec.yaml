openapi: 3.0.0
info:
  version: 1.0.0
  title: JSON Placeholder API
  description: See https://jsonplaceholder.typicode.com/

servers:
  - url: api/v1
paths:
  /songs:
    post:
      description: Create a new song
      tags: ["Songs"]
      operationId: "createSong"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSongRequest"
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SongVM"
    get:
      description: Returns all songs
      tags: ["Songs"]
      operationId: "getSongs"
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SongsListVM"
  /songs/{song_id}:
    get:
      description: Returns a song by id
      tags: ["Songs"]
      operationId: "getSong"
      parameters:
        - name: song_id
          in: path
          required: true
          description: The song id.
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SongVM"
        "404":
          description: Song not found

  /auth/login:
    post:
      description: Login a new user or signup
      tags: ["Auth"]
      operationId: "login"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegistrationRequest"
      responses:
        "200":
          description: Successful response
  /auth/authenticate:
    post:
      description: Authenticate a user with a jwt token
      tags: ["Auth"]
      operationId: "authenticate"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationRequest"
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/AuthenticationResponse"
  /auth/refresh:
    post:
      description: Refresh a token
      tags: ["Auth"]
      operationId: "refresh"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        "200":
          description: Successful response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/AuthenticationResponse"
components:
  schemas:
    SongsListVM:
      "type": "array"
      "items":
        $ref: "#/components/schemas/SongVM"
    CreateSongRequest:
      type: object
      required: [ title, artist, album, year ]
      properties:
        title:
          type: string
        artist:
          type: string
        album:
          type: string
        year:
          type: integer
    SongVM:
      "type": "object"
      "required":
        - "id"
        - "title"
        - "artist"
        - "album"
        - "year"
      "properties":
        id:
          type: "string"
        title:
          type: "string"
        artist:
          type: "string"
        album:
          type: "string"
        year:
          type: "integer"
    RegistrationRequest:
      type: object
      required: [ idToken ]
      properties:
        idToken:
          type: string
    AuthenticationRequest:
      type: object
      required: [ token ]
      properties:
        token:
          type: string
    AuthenticationResponse:
      type: object
      required: [ token, refreshToken ]
      properties:
        token:
          type: string
        refreshToken:
          type: string
    RefreshRequest:
      type: object
      required: [ refreshToken ]
      properties:
        refreshToken:
          type: string